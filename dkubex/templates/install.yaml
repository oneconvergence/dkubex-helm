apiVersion: batch/v1
kind: Job
metadata:
  name: "dkubex-installer"
  namespace: {{ .Release.Namespace }}
spec:
  backoffLimit: 0
  template:
    metadata:
      name: "dkubex-installer"
    spec:
      hostPID: true
      restartPolicy: Never
      imagePullSecrets:
      - name: dockerhub-secret
      containers:
      - name: dkubex-installer
        image: dkubex123/d3x-installer:{{ .Values.image_tag }}
        imagePullPolicy: Always
        securityContext:
          privileged: true
       
        command: ["/bin/sh", 
        "-c", "\
         {{ if eq .Values.gpu_operator.enabled true }} \
         dxm gpu install -d {{.Values.gpu_operator.driver}} -t {{.Values.gpu_operator.toolkit}} && \
         {{ end }}\
         {{ if and (eq .Values.storage_type "nfs") (eq .Values.nfs.create_server true) }} \
         dxm nfs install {{.Values.nfs.storage_path}} && \
         {{ end }}\
         dxm install -n {{ .Values.app_namespace }} --dev \
         {{ if eq .Values.storage_type "nfs" }} \
         -s {{ .Values.nfs.nfs_server }} \
         {{ else }}\
         -h {{.Values.hostpath.storage_path}} \
         {{ end }}\
         {{ if ne .Values.database_url "" }}\
         -d {.Values.database_url} \
         {{end}}\
          {{ if eq .Values.datadog.enabled true }} \
          -ds {{.Values.datadog.site}} -dk {{.Values.datadog.key}} \
         {{ end }}\
          {{ if eq .Values.fm.enabled false }} \
          -nfm \
         {{ end }}\
         -t {{ .Values.image_tag }} -i {{ .Values.image_pull_policy }} \
          {{ if eq .Values.loadbalancer true }}\
         -l \
         {{end}}\
          "]
        
      serviceAccountName: dkubex-deployer-sa
