# Default values for dkubex.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

app_namespace: "d3x"
image_tag: "0.8.5"
admin_password: "dkubex"
provider: "dkubex" # dkubex/eks

eks:
  autoscaler_arn: ""
  cluster_name: ""

# Docker registry for installation
registry:
  # Format: registry/[repo]
  name: "docker.io/dkubex123"

  # Container registry username
  username: ""

  # Container registry password
  password: ""

# Storage type can be "nfs" or "hostpath"
storage_type: "nfs"

nfs:
  # true for creating internal NFS server
  create_server: true

  # Specify host path for creating internal NFS
  storage_path: "/var/dkubex"

  # Specify storage class. If both storage_path and storage_class are specified,
  # storage_class takes precedence.
  storage_class: ""

  internal_nfs_node_selector:
    node_selector_key: "kubernetes.io/os"
    node_selector_value: "linux"
    taint: ""

  # Format: <server_ip>:<path>
  nfs_server: "kubernetes:/"

  # NFS version (supported: 4.1 or 4.0)
  version: "4.1"

hostpath:
  # Specify host path for storage
  storage_path: "/var/dkubex"

# Specify the home NFS server if user home is different
user_home_nfs_server: ""

# NFS version for user home (supported: 4.1 or 4.0)
user_home_nfs_server_version: "4.1"

# Wipe data from the storage (true/false)
wipe_data: false

# Database URL in format: dialect+driver://username:password@host:port/database
database_url: ""

# Image pull policy for the containers
image_pull_policy: "Always"

loadbalancer:
  enabled: false

  eks:
    name: "dkubex"
    # AWS certificate ARN
    cert_arn: ""
    cross_zone_lb: false
    internal_lb: true
    scheme: ""
    subnets: ""
    tags: ""

# Docker registry prefix
reg_prefix: ""

# Enable intel GPU device plugin
habana:
  enabled: false

# Enables GPU for dkubex
gpu_operator:
  enabled: false
  driver: false # Install driver
  toolkit: false # Install toolkit

# Enables Datadog for dkubex
datadog:
  enabled: false
  site: "" # Datadog site
  key: "" # Datadog API key
  cluster_name: "" # Unique cluster name for scoping hosts and Cluster Checks

# Enables FM (File Manager) for dkubex
fm:
  enabled: true

  s3:
    enabled: false
    bucket_name: "" # S3 bucket for FM and Weaviate backup
    weaviate_backup_path: ""
    aws_access_key_id: ""
    aws_access_secret: ""

# Enables Kubeflow for dkubex
kubeflow:
  enabled: false

# Enables SSSD integration with dkubex (options: sssd/ldap/local_ldap)
sssd:
  enabled: true
  type: ldap # sssd/ldap

  ldap_server:
    # Create local LDAP server for user management
    enabled: true
    auto_user_add: true # Automatically add authenticated users to LDAP if they do not exist

  # Active Directory details when type is sssd and LDAP server is not enabled
  ad: ""
  bind_password: ""
  ou: ""
  bind_user: ""

  # LDAP details when type is ldap and LDAP server is not enabled
  ldap_url: ""
  ldap_search_base: ""

# Enables OAuth for dkubex (configurable from admin UI post-installation)
auth:
  enabled: false
  provider: "github" # Options: okta/github/azure/adfs/keycloak
  issuer_url: ""
  client_id: ""
  client_secret: ""
  redirect_url: "" # e.g., https://<IP/DOMAIN_NAME>:32443/oauth2/callback
  organisation: ""
  email_domain: "*"
  azure_tenant: "" # Tenant ID for Azure AD
  realm: "" # Realm for Keycloak
  allowed_role: "" # Allowed role name for Keycloak
  allowed_group: "" # Allowed group name for Keycloak

# Configuration for MLflow in dkubex
mlflow:
  replica_count: 1
  database_url: ""
  artifacts_destination: ""
  aws_access_key_id: ""
  aws_access_secret: ""

# Flyte configuration for dkubex
flyte:
  enabled: false
  accountNumber: "" # AWS account number
  accountRegion: "" # AWS region
  bucketName: "" # S3 bucket name
  d3xUrl: "" # External URL to access d3x
  cert_arn: ""

# Node selector label for dkubex pods
node_selector_label: "node.kubernetes.io/instance-type"

# Pod security enforcement settings
pod_security_enforce: ""

# Dkubex components/controllers will be scheduled on control-plane nodes
control_plane:
  node_selector: "kubernetes.io/os"
  node_selector_value: "linux"
  node_taint: "dkubex/controlplane=true:NoSchedule"
  enabled: false

# MLflow controller node configuration
mlflow_controller:
  node_selector: "kubernetes.io/os"
  node_selector_value: "linux"
  node_taint: ""

# Weka file system configuration for dkubex
weka:
  enabled: false
  file_system_name: ""
  ips: ""
  username: ""
  password: ""

# Workspace settings for dkubex
workspace:
  enabled: true
